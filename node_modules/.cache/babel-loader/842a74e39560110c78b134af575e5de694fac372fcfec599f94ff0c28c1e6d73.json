{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderrezaei/Desktop/project-exam-2-alexrezaei/src/components/Comments.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { getToken } from './storage/Storage';\nimport { BASE_URL } from \"../api/api\";\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(props) {\n  _s();\n  const id = useParams();\n  const token = getToken();\n  const [postInfo, setPostInfo] = useState({\n    comments: [{\n      author: {\n        avatar: \"\",\n        banner: \"\",\n        email: \"\",\n        name: \"\"\n      },\n      body: \"\",\n      created: \"\",\n      id: 0,\n      owner: \"\",\n      postId: 0,\n      replyToId: null\n    }]\n  });\n  async function getComments() {\n    const url = BASE_URL + \"/social/posts/\" + id.postId + \"?_comments=true\";\n    const options = {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    };\n    try {\n      const res = await fetch(url, options);\n      const json = await res.json();\n      setPostInfo(json);\n    } catch {}\n  }\n  useEffect(() => {\n    getComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postInfo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center border-[1px] border-solid rounded-[5px] p-[10px] mt-[20px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-[10px]\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"text-[#13D5FF]\",\n              to: \"/profile/\" + comment.author.name,\n              children: comment.author.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[80px] h-[80px] rounded-[5px]\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-full h-full\",\n              src: comment.author.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ml-[10px]\",\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_s(Comments, \"Ul06SXr6qObLZ57s9mF3rU0wuYk=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","getToken","BASE_URL","useParams","Link","Comments","props","id","token","postInfo","setPostInfo","comments","author","avatar","banner","email","name","body","created","owner","postId","replyToId","getComments","url","options","headers","Authorization","res","fetch","json","map","comment"],"sources":["/Users/alexanderrezaei/Desktop/project-exam-2-alexrezaei/src/components/Comments.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect} from \"react\";\nimport { getToken } from './storage/Storage';\nimport { BASE_URLÂ } from \"../api/api\"\nimport { useParams, Link } from 'react-router-dom';\nfunction Comments(props) {\n\tconst id = useParams();\n\tconst token = getToken();\n\tconst [postInfo, setPostInfo] = useState(\n\t\t{\n\t\t\tcomments: [ {\n\t\t\t\tauthor: {\n\t\t\t\t\tavatar: \"\",\n\t\t\t\t\tbanner: \"\",\n\t\t\t\t\temail: \"\",\n\t\t\t\t\tname: \"\",\n\t\t\t\t},\n\t\t\t\tbody: \"\",\n\t\t\t\tcreated: \"\",\n\t\t\t\tid: 0,\n\t\t\t\towner: \"\",\n\t\t\t\tpostId: 0,\n\t\t\t\treplyToId: null,\n\t\t\t}]\n\t\t}\n\t);\n\n\tasync function getComments() {\n\t\tconst url = BASE_URL + \"/social/posts/\" + id.postId + \"?_comments=true\"\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t}\n\t\ttry {\n\t\t\tconst res = await fetch(url, options)\n\t\t\tconst json = await res.json()\n\t\t\tsetPostInfo(json)\n\t\t}catch{}\n\t}\n\n\tuseEffect(() => {\n\t\tgetComments()\n\t},[])\n  return (\n\t\t<div>\n\t\t\t<div>{postInfo.comments.map(comment => \n\t\t\t\t\t<div className='flex items-center border-[1px] border-solid rounded-[5px] p-[10px] mt-[20px]'>\n\t\t\t\t\t\t<div className='flex flex-col'>\n\t\t\t\t\t\t\t<p className='mb-[10px]'><Link className='text-[#13D5FF]' to={\"/profile/\" + comment.author.name}>{comment.author.name}</Link></p>\n\t\t\t\t\t\t\t<div className='w-[80px] h-[80px] rounded-[5px]'>\n\t\t\t\t\t\t\t\t<img className='w-full h-full' src={comment.author.avatar} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className='ml-[10px]'>{comment.body}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t</div>\n  )\n}\n\nexport default Comments"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC;AACnD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACxB,MAAMC,EAAE,GAAGJ,SAAS,EAAE;EACtB,MAAMK,KAAK,GAAGP,QAAQ,EAAE;EACxB,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CACvC;IACCY,QAAQ,EAAE,CAAE;MACXC,MAAM,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACP,CAAC;MACDC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXX,EAAE,EAAE,CAAC;MACLY,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE;IACZ,CAAC;EACF,CAAC,CACD;EAED,eAAeC,WAAW,GAAG;IAC5B,MAAMC,GAAG,GAAGrB,QAAQ,GAAG,gBAAgB,GAAGK,EAAE,CAACa,MAAM,GAAG,iBAAiB;IACvE,MAAMI,OAAO,GAAG;MACfC,OAAO,EAAE;QACRC,aAAa,EAAE,SAAS,GAAGlB;MAC5B;IACD,CAAC;IACD,IAAI;MACH,MAAMmB,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;MACrC,MAAMK,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;MAC7BnB,WAAW,CAACmB,IAAI,CAAC;IAClB,CAAC,OAAK,CAAC;EACR;EAEA7B,SAAS,CAAC,MAAM;IACfsB,WAAW,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EACJ,oBACA;IAAA,uBACC;MAAA,UAAMb,QAAQ,CAACE,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACjC;QAAK,SAAS,EAAC,8EAA8E;QAAA,wBAC5F;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC7B;YAAG,SAAS,EAAC,WAAW;YAAA,uBAAC,QAAC,IAAI;cAAC,SAAS,EAAC,gBAAgB;cAAC,EAAE,EAAE,WAAW,GAAGA,OAAO,CAACnB,MAAM,CAACI,IAAK;cAAA,UAAEe,OAAO,CAACnB,MAAM,CAACI;YAAI;cAAA;cAAA;cAAA;YAAA;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAI,eACjI;YAAK,SAAS,EAAC,iCAAiC;YAAA,uBAC/C;cAAK,SAAS,EAAC,eAAe;cAAC,GAAG,EAAEe,OAAO,CAACnB,MAAM,CAACC;YAAO;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACxD;QAAA;UAAA;UAAA;UAAA;QAAA,QACD,eACN;UAAA,uBACA;YAAG,SAAS,EAAC,WAAW;YAAA,UAAEkB,OAAO,CAACd;UAAI;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QACrC;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IACL;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACF;AAER;AAAC,GAzDQZ,QAAQ;EAAA,QACLF,SAAS;AAAA;AAAA,KADZE,QAAQ;AA2DjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}